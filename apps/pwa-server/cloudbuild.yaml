steps:
  # Step 1: Build the Docker image using a multi-stage Dockerfile
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "--no-cache"
      - "-t"
      - "${_AR_HOSTNAME}/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"
      - "-f"
      - "apps/pwa-server/Dockerfile"  # Path to your Dockerfile
      - "."
    id: "Build"

  # Step 2: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "${_AR_HOSTNAME}/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"
    id: "Push"

  # Step 3: Deploy the Docker image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--platform=${_PLATFORM}"
      - "--image=${_AR_HOSTNAME}/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"
      - "--region=${_DEPLOY_REGION}"
      - "--allow-unauthenticated"
      - "--labels=commit-sha=${COMMIT_SHA},trigger-id=${_TRIGGER_ID}"
      - "--quiet"
    id: "Deploy"

images:
  - "${_AR_HOSTNAME}/${PROJECT_ID}/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}"

options:
  substitutionOption: "ALLOW_LOOSE"
  logging: "CLOUD_LOGGING_ONLY"

substitutions: {}

tags:
  - "gcp-cloud-build-deploy-cloud-run"
  - "gcp-cloud-build-deploy-cloud-run-managed"
  - "pwa-server"
