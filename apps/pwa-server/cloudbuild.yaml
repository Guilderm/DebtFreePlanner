steps:
  # Step 1: List files in the repository root for debugging
  - name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'ls -la /workspace/apps/pwa-server'
    id: 'ListFiles'

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '-f'
      - 'apps/pwa-server/Dockerfile'
      - 'apps/pwa-server'
    id: 'Build'

  # Step 3: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
    id: 'Push'

  # Step 4: Deploy the Docker image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--image=${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=${_DEPLOY_REGION}'
      - '--allow-unauthenticated'  # Adjust based on your authentication requirements
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=${COMMIT_SHA},gcb-build-id=${BUILD_ID},gcb-trigger-id=${_TRIGGER_ID}'
      - '--quiet'
    id: 'Deploy'

images:
  - '${_AR_HOSTNAME}/${PROJECT_ID}/cloud-run-source-deploy/${REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'

options:
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'

substitutions:
  _DEPLOY_REGION: 'us-central1'
  _AR_HOSTNAME: 'us-central1-docker.pkg.dev'
  _TRIGGER_ID: '2d8f81c4-48c0-48c6-bf28-2b3cf6c29dab'
  _SERVICE_NAME: 'pwa-server'
  REPO_NAME: 'debtfreeplanner'

tags:
  - 'gcp-cloud-build-deploy-cloud-run'
  - 'gcp-cloud-build-deploy-cloud-run-managed'
  - 'pwa-server'
