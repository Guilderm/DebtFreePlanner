steps:
  # Step 0: Install dependencies, build the project, and prepare deployment files
  - name: "node:22"
    id: "Install-Build-Prepare"
    entrypoint: bash
    args:
      - "-c"
      - |
        set -e
        echo "==== Step 0: Install Dependencies, Build, and Prepare ===="
        
        echo "Installing pnpm..."
        npm install -g pnpm
        
        echo "Installing dependencies for @debtfreeplanner/pwa-client..."
        pnpm --filter @debtfreeplanner/pwa-client install --frozen-lockfile
        
        echo "Building the project..."
        pnpm --filter @debtfreeplanner/pwa-client run build
        
        echo "Validating build output..."
        if [ ! -f apps/pwa-client/.output/server/index.mjs ]; then
          echo "Build output is incomplete: .output/server/index.mjs not found"
          exit 1
        else
          echo "Build output validated: .output/server/index.mjs found"
        fi

        echo "Copying app.yaml to /workspace..."
        cp apps/pwa-client/app.yaml ./ || { echo "Failed to copy app.yaml"; exit 1; }

        echo "Copying cloudbuild.yaml to /workspace..."
        cp apps/pwa-client/cloudbuild.yaml ./ || { echo "Failed to copy cloudbuild.yaml"; exit 1; }

        echo "Final workspace directory structure:"
        ls -R .

  # Step 1: Deploy the application to App Engine
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy Application"
    entrypoint: bash
    args:
      - "-c"
      - |
        echo "==== Step 1: Deploying Application ===="
        
        gcloud app deploy app.yaml --quiet --verbosity=debug --stop-previous-version
        
options:
  logging: CLOUD_LOGGING_ONLY
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

# Specify timeout at the root level
timeout: "1200s"
